/*
 * This file is generated by jOOQ.
 */
package com.allane.mobility.persistence.tables.daos;


import com.allane.mobility.persistence.tables.AmUser;
import com.allane.mobility.persistence.tables.records.AmUserRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record3;
import org.jooq.impl.DAOImpl;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AmUserDao extends DAOImpl<AmUserRecord, com.allane.mobility.persistence.tables.pojos.AmUser, Record3<UShort, String, String>> {

    /**
     * Create a new AmUserDao without any configuration
     */
    public AmUserDao() {
        super(AmUser.AM_USER, com.allane.mobility.persistence.tables.pojos.AmUser.class);
    }

    /**
     * Create a new AmUserDao with an attached configuration
     */
    public AmUserDao(Configuration configuration) {
        super(AmUser.AM_USER, com.allane.mobility.persistence.tables.pojos.AmUser.class, configuration);
    }

    @Override
    public Record3<UShort, String, String> getId(com.allane.mobility.persistence.tables.pojos.AmUser object) {
        return compositeKeyRecord(object.getIdUser(), object.getName(), object.getSurname());
    }

    /**
     * Fetch records that have <code>ID_user BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchRangeOfIdUser(UShort lowerInclusive, UShort upperInclusive) {
        return fetchRange(AmUser.AM_USER.ID_USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID_user IN (values)</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchByIdUser(UShort... values) {
        return fetch(AmUser.AM_USER.ID_USER, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(AmUser.AM_USER.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchByName(String... values) {
        return fetch(AmUser.AM_USER.NAME, values);
    }

    /**
     * Fetch records that have <code>surname BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchRangeOfSurname(String lowerInclusive, String upperInclusive) {
        return fetchRange(AmUser.AM_USER.SURNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>surname IN (values)</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchBySurname(String... values) {
        return fetch(AmUser.AM_USER.SURNAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(AmUser.AM_USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchByEmail(String... values) {
        return fetch(AmUser.AM_USER.EMAIL, values);
    }

    /**
     * Fetch records that have <code>changed BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchRangeOfChanged(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(AmUser.AM_USER.CHANGED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>changed IN (values)</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchByChanged(LocalDateTime... values) {
        return fetch(AmUser.AM_USER.CHANGED, values);
    }

    /**
     * Fetch records that have <code>ID_user_change BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchRangeOfIdUserChange(UShort lowerInclusive, UShort upperInclusive) {
        return fetchRange(AmUser.AM_USER.ID_USER_CHANGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID_user_change IN (values)</code>
     */
    public List<com.allane.mobility.persistence.tables.pojos.AmUser> fetchByIdUserChange(UShort... values) {
        return fetch(AmUser.AM_USER.ID_USER_CHANGE, values);
    }
}
